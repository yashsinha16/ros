<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mycar_gazebo)/worlds/mycar.world"/>
    <!-- more default parameters can be changed here -->
  </include>
<!-- Spawn a robot into Gazebo -->
<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find mycar_description)/urdf/mycar.urdf -urdf -z 1 -model mycar" />

  <arg name="model" default="$(find mycar_description)/urdf/mycar.urdf"/>
  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
  <param name="use_gui" value="$(arg gui)"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find mycar_gazebo)/config/myrobot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/mycar" args="front_left_bar_joint_position_controller front_right_bar_joint_position_controller front_left_wheel_joint_position_controller front_right_wheel_joint_position_controller  joint_state_controller"/>


 
  <!-- convert joint states to TF transforms for rviz, etc -->


  
  
  

</launch>
